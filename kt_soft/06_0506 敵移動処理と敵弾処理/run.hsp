;
; バッファ画面（ウィンドウ1）を用意し、画像を読み込む
;
buffer 1
picload "stg3.gif"

;
; メイン画面（ウィンドウ0）を 480x640 で用意する
;
screen 0, 480, 640, 0, 0, 0

px = 208 : py = 576 ; 自機の初期位置

;
; 敵の設定
;
emx = 12            ; 数
dim ex,   emx       ; X座標
dim ey,   emx       ; Y座標
dim dx,   emx       ; X移動量
dim dy,   emx       ; Y移動量
dim ef,   emx       ; 敵が画面上にいる／いない
dim enm,  emx       ; 種類
dim et,   emx       ; 敵の生成時間

;
; 敵弾の設定
;
emt = 100           ; 数
dim etx,  emt       ; X座標
dim ety,  emt       ; Y座標
dim etxv, emt       ; X移動量
dim etyv, emt       ; Y移動量
dim etf,  emt       ; 敵弾が画面上にある／ない

; *****************************************************************************************************************
;    メインループ
; *****************************************************************************************************************
*mainLoop

redraw 0              ; 仮想画面を指定
color  0, 0, 0        ; 色に黒を指定
boxf   0, 0, 480, 640 ; 仮想画面を黒で塗りつぶす

; ----------------------------------------------------------------------------
; *men 敵の初期化
; ----------------------------------------------------------------------------
gosub *men

;
;  自機の移動処理
;
pk = 0                         ; 自機の傾きの為の変数
stick ky, 15                   ; キーボードのチェック
if ky & 1 : px -= 8 : pk = 64  : if px < 0   : px = 0
if ky & 4 : px += 8 : pk = 128 : if px > 416 : px = 416
if ky & 2 : py -= 8 :            if py < 0   : py = 0
if ky & 8 : py += 8 :            if py > 576 : py = 576
gmode 2                        ; 透明化処理の為の命令
pos px, py                     ; 自機の座標指定
gcopy 1, pk, 0, 64, 64         ; バッファ画面（ウィンドウ1）より自機画像をコピー

; ----------------------------------------------------------------------------
;  敵の移動処理
; ----------------------------------------------------------------------------
repeat emx                        ; 「repeat〜loop」間をemx回繰り返す
    et(cnt)++                     ; 敵の生成時間 カウントアップ
    if ef(cnt)  < 1 : continue    ; ef(cnt)が1以下（画面上にいない）ならばrepeatに戻る
    if enm(cnt) = 1 : gosub *em01 ; enm(cnt)（敵の種類）が1ならば *em01 へ
loop

;
; 敵弾の発射処理
;
repeat emt                            ; 「repeat〜loop」間をemt回繰り返す
if etf(cnt) = 1 {                     ; etf(cnt)が1（敵弾が画面上にある）
    etx(cnt) = etx(cnt) + etxv(cnt)   ; 敵弾のX移動量
    ety(cnt) = ety(cnt) + etyv(cnt)   ; 敵弾のY移動量
    pos etx(cnt), ety(cnt)            ; 敵弾のX-Y座標を指定
    gcopy 1, 192, 64, 16, 16          ; バッファ画面（ウィンドウ1）より敵弾の画像をコピー
    
    if etx(cnt) > 480 : etf(cnt) = 0  ; 敵弾の座標が480以上になったら敵弾の存在を消す
    if etx(cnt) < 0   : etf(cnt) = 0
    if ety(cnt) > 640 : etf(cnt) = 0
    if ety(cnt) < 0   : etf(cnt) = 0
}
loop

redraw 1          ; メイン画面を更新
wait 1
; await 1         ; これを入れないとパソコンが固まる
gtime = gtime + 1 ; タイムテーブルの為の変数

goto *mainLoop


; *****************************************************************************************************************
;   *men 敵の初期化
; *****************************************************************************************************************
*men

;
; 敵1（下りて来るだけの動き）の生成時間と生成位置 → 敵1の初期化
; 
if gtime = 1   : bx = 0   : by = -64 : gosub *eb01
if gtime = 2   : bx = 416 : by = -64 : gosub *eb01
if gtime = 50  : bx = 80  : by = -64 : gosub *eb01
if gtime = 51  : bx = 336 : by = -64 : gosub *eb01
if gtime = 100 : bx = 160 : by = -64 : gosub *eb01
if gtime = 101 : bx = 256 : by = -64 : gosub *eb01

if gtime = 252 : gtime = 0
return

; ----------------------------------------------------------------------------------------------
;   *eb01 敵1の初期化
; ----------------------------------------------------------------------------------------------
*eb01

repeat emx                       ; 「repeat〜loop」間を emx回 繰り返す
    if ef(cnt) > 0 : continue    ; ef(cnt)が0以上（敵が画面上にいる）ならば repeatに戻る
    
    enm(cnt) = 1                 ; 敵の種類
    ef(cnt)  = 1                 ; 敵が画面上にいる
    ex(cnt)  = bx : ey(cnt) = by ; 生成位置（X-Y座標へ代入）
    dx(cnt)  = 0  : dy(cnt) = 2  ; X,Yの移動量
    et(cnt)  = 0                 ; 敵の生成時間をリセット
    break                        ; 「repeat〜loop」間のループから、強制的に抜け出す
loop
return

; --------------------------------------------------------------------------
;   *em01 敵1の移動処理
; --------------------------------------------------------------------------
*em01

ek = 0  ; 敵の傾きの為の変数
;
; 敵の生成時間が150以上で、
; ex(cnt)（敵のX座標）が 240以下（画面中央より左側）ならば、
; dx(cnt)（敵のXの移動量）に -3 を代入し、
; ek（敵の画像傾き）に 64 を代入する。
;
if et(cnt) > 150 : if ex(cnt) < 240 : dx(cnt) = -3 : ek = 64
if et(cnt) > 150 : if ex(cnt) > 240 : dx(cnt) = 3  : ek = 128

;
; 敵1の移動
;
ex(cnt) = ex(cnt) + dx(cnt)
ey(cnt) = ey(cnt) + dy(cnt) 

if ey(cnt) > 640 : ef(cnt) = 0    ; 画面から消えたら敵の存在を無しにする
;
; 敵1の表示
;
pos ex(cnt), ey(cnt)
gmode 2
gcopy 1, ek, 64, 64, 64

;
; 敵弾の発生処理
;
sx = px - ex(cnt)   ; 自機と敵とのX座標の差
sy = py - ey(cnt)   ; 自機と敵とのY座標の差
txv = sx            ; txv, tyvにそれぞれを代入する 
tyv = sy

if sx < 0 : sx = 0 - sx ; sxの絶対値を計算
if sy < 0 : sy = 0 - sy ; syの絶対値を計算

su = sx                 ; suは自機と敵との大体の距離となる

if su > 250 {
    if ef(cnt) = 1 {
        if etf(cnt) = 0 : if enm(cnt) = 1 { ; etfが 0（敵弾が画面にない）、enm(cnt) が 1（敵1）の場合
            etx(cnt)  = ex(cnt) + 24        ; etx(cnt)にex(cnt) + 24 を代入
            ety(cnt)  = ey(cnt) + 55        ; ety(cnt)にey(cnt) + 55 を代入
                                            ; （敵弾の生成座標は、少しずらさないと敵と重なってしまう）
            etf(cnt)  = 1                   ; etf(cnt)を 1に（敵弾が画面上にある）
            etxv(cnt) = 0                   ; etxv(cnt)を0に（敵弾のX移動量)
            etyv(cnt) = 5                   ; etyv(cnt)を5に（敵弾のY移動量）
        }
    }
}
return
