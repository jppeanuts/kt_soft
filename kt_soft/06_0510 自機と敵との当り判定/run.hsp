;
; バッファ画面（ウィンドウ1）を用意し、画像を読み込む
;
*start

buffer  1
picload "stg5.gif"

wxs = 320 : wys = 448 ; メイン画面の座標指定
;
; メイン画面（ウィンドウ0）を 320x448 で用意する
;
screen 0, wxs, wys, 0, 0, 0

gtime = 0
px = 144 : py = 400 ; 自機の初期位置

;
; 敵の設定
;
emx = 50    ; 数
dim ex, emx ; X座標
dim ey, emx ; Y座標
dim dx, emx ; X移動量
dim dy, emx ; Y移動量
dim ef, emx ; 敵が画面上にいる／いない
dim em, emx ; 種類
dim et, emx ; 敵の生成時間

; *****************************************************************************************************************
;    メインループ
; *****************************************************************************************************************
*mainLoop

redraw 0              ; 仮想画面を指定
color  0, 0, 0        ; 色に黒を指定
boxf   0, 0, wxs, wys ; 仮想画面を黒で塗りつぶす

; ----------------------------------------------------------------------------------------------
;  *men 敵の初期化
; ----------------------------------------------------------------------------------------------
gosub *men

;
; 自機の移動処理
;
pk = 0                        ; 自機の傾きの為の変数
stick ky, 15                  ; キーボードのチェック
if ky & 1 : px -= 2 : pk = 32 : if px < 0   : px = 0
if ky & 4 : px += 2 : pk = 64 : if px > 288 : px = 288
if ky & 2 : py -= 2 :           if py < 0   : py = 0
if ky & 8 : py += 2 :           if py > 416 : py = 416
gmode 2                       ; 透明化処理の為の命令
pos   px, py                  ; 自機の座標指定
gcopy 1, pk, 0, 32, 32        ; バッファ画面（ウィンドウ1）より自機画像をコピー

;
; 敵の移動処理
;
repeat emx                        ; 「repeat〜loop」間をemx回繰り返す
    et(cnt)++                     ; 敵の生成時間 カウントアップ
    if ef(cnt)  < 1 : continue    ; ef(cnt)が1以下（画面上にいない）ならばrepeatに戻る
    if enm(cnt) = 1 : gosub *em01 ; enm(cnt)（敵の種類）が1ならば *em01へ移動
loop

;
; 自機と敵の当たり判定
;
repeat emx                                           ; 「repeat〜loop」間をemx回繰り返す
    if ef(cnt) = 0 : continue                        ; ef(cnt)が0（画面上にいない)ならばrepeatに戻る
    if (abs(px-ex(cnt))<16) & (abs(py-ey(cnt))<16) { ; 自機と敵との差が16ドット以下ならば
        gosub *gameover                              ; 当たり！ → *gameoverへ
    }
loop

redraw 1          ; メイン画面を更新
wait   1
; await 1         ; これを入れないとパソコンが固まる
gtime = gtime + 1 ; タイムテーブルの為の変数

goto *mainLoop


; *****************************************************************************************************************
;    サブルーチン
; *****************************************************************************************************************
; ----------------------------------------------------------------------------------------------
;   *men 敵の初期化
; ----------------------------------------------------------------------------------------------
*men

if gtime = 1   : bx = 0   : by = -32 : gosub *eb01
if gtime = 2   : bx = 288 : by = -32 : gosub *eb01
if gtime = 21  : bx = 40  : by = -32 : gosub *eb01
if gtime = 22  : bx = 248 : by = -32 : gosub *eb01
if gtime = 41  : bx = 80  : by = -32 : gosub *eb01
if gtime = 42  : bx = 208 : by = -32 : gosub *eb01
if gtime = 61  : bx = 0   : by = -32 : gosub *eb01
if gtime = 62  : bx = 288 : by = -32 : gosub *eb01
if gtime = 81  : bx = 40  : by = -32 : gosub *eb01
if gtime = 82  : bx = 248 : by = -32 : gosub *eb01
if gtime = 100 : bx = 80  : by = -32 : gosub *eb01
if gtime = 101 : bx = 208 : by = -32 : gosub *eb01

if gtime = 252 : gtime = 0
return

; ----------------------------------------------------------------------------------------------
;   *eb01 敵1の初期化
; ----------------------------------------------------------------------------------------------
*eb01

repeat emx                       ; 「repeat〜loop」間を emx回 繰り返す
    if ef(cnt) > 0 : continue    ; ef(cnt)が0以上(敵が画面上にいる）ならばrepeatに戻る

    enm(cnt) = 1                 ; 敵の種類
    ef(cnt)  = 1                 ; 敵が画面上にいる
    ex(cnt)  = bx : ey(cnt) = by ; 生成位置（X-Y座標へ代入）
    dx(cnt)  = 0  : dy(cnt) = 2  ; X,Yの移動量
    et(cnt)  = 0                 ; 敵の生成時間をリセット
    break                        ; 「repeat〜loop」間のループから、強制的に抜け出す
loop
return

; ----------------------------------------------------------------------------------------------
;   *em01 敵1の移動処理
; ----------------------------------------------------------------------------------------------
*em01

ek = 0 ; 敵画像傾きの為の変数
;
; 敵の生成時間が150以上で、
; ex(cnt)（敵のX座標）が160以下（画面中央より左側）ならば、
; dx(cnt)（敵のXの移動量）に-2を代入し、	
; ek（敵の画像傾き）に32を代入する。
;
if et(cnt) > 150 : if ex(cnt) < 160 : dx(cnt) = -2 : ek = 32
if et(cnt) > 150 : if ex(cnt) > 160 : dx(cnt) = 2  : ek = 64

; 敵1の移動
ex(cnt) = ex(cnt) + dx(cnt)
ey(cnt) = ey(cnt) + dy(cnt)

;
; 画面から消えたら敵の存在を無しにする
;
if ey(cnt) > 448 : ef(cnt) = 0
if ex(cnt) > 320 : ef(cnt) = 0
if ex(cnt) < 0   : ef(cnt) = 0

;
; 敵1の表示
;
pos   ex(cnt), ey(cnt)
gmode 2
gcopy 1, ek, 32, 32, 32
return

; ----------------------------------------------------------------------------------------------
;   GAME OVER
; ----------------------------------------------------------------------------------------------
*gameover

color 255, 255, 255 ; 色を白に指定
pos   125, 228      ; 位置指定
mes   "GAME OVER"   ; GAME OVERを表示
redraw 1            ; 画面を更新
stop                ; プログラムを終了
